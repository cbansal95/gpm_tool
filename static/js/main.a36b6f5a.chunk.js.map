{"version":3,"sources":["components/input.js","components/buttons.js","components/datatable.js","components/viewTables.js","components/body.js","App.js","serviceWorker.js","index.js"],"names":["FileInput","props","handleFileRead","event","console","log","JSON","parse","fr","result","setSongsData","fileUploaded","preventDefault","fileInput","current","files","type","FileReader","onloadend","readAsText","React","createRef","Fragment","accept","onChange","this","ref","Component","ButtonClass","returnIndex","dispFun","val","onClick","buttonName","DataTableComp","data","columns","name","title","split","selector","sortable","i","length","push","num","dat","pagination","defaultSortField","defaultSortAsc","ViewTables","song_data","artist_data","song_index","indexOf","song","artist_index","artist","className","key","Body","setData","obj","rangeArr","substring","toLowerCase","undefined","time","description","allTime","setState","changeDisplay","index","state","display","id","range","map","rangeVal","dataToPass","App","songs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a36b6f5a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass FileInput extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n        var fr;\n    }\n    \n    handleFileRead = (event) =>{\n        console.log(JSON.parse(this.fr.result));\n        this.props.setSongsData(JSON.parse(this.fr.result));\n    }\n    fileUploaded = (event) => {\n        event.preventDefault();\n        console.log(this.fileInput.current.files[0])\n        if(this.fileInput.current.files[0].type==='application/json')\n        {\n            this.fr = new FileReader();\n            this.fr.onloadend = this.handleFileRead;\n            this.fr.readAsText(this.fileInput.current.files[0]);\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <center><input type=\"file\" accept=\".json\" onChange={this.fileUploaded} ref={this.fileInput} /></center>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default FileInput;","import React, {Component} from 'react';\n\nclass ButtonClass extends Component {\n    returnIndex = () =>{\n        this.props.dispFun(this.props.val)\n    }\n    render()\n    {\n        return <button onClick={this.returnIndex}>{this.props.buttonName}</button>\n    }\n}\n\nexport default ButtonClass;","import React, {Component} from 'react';\nimport DataTable from 'react-data-table-component';\nimport { tsParenthesizedType } from '@babel/types';\n\nclass DataTableComp extends Component{\n\n    render(){\n        console.log(this.props.data)\n        const columns=[\n            {\n                name:this.props.title.split(' ')[0],\n                selector:'dat',\n                sortable: true\n            },\n            {\n                name:'Listens',\n                selector:'num',\n                sortable:'true'\n            }\n        ]\n        var data=[]\n        for(let i=0;i<this.props.data[0].length;i++)\n        {\n            data.push({'id':this.props.val+i,num:this.props.data[1][i],dat:this.props.data[0][i]})\n        }\n        return(\n            <DataTable\n            title={this.props.title}\n            columns={columns}\n            data={data}\n            pagination={true}\n            defaultSortField={'num'}\n            defaultSortAsc={false}/>\n        )\n    }\n}\n\nexport default DataTableComp;","import React, { Component } from 'react'\nimport DataTableComp from './datatable'\n\n\nclass ViewTables extends Component {\n\n    render() {\n        var song_data = [[], []]\n        var artist_data = [[], []]\n        for (let i = 0; i < this.props.data.length; i++) {\n            let song_index = song_data[0].indexOf(this.props.data[i].song)\n            let artist_index = artist_data[0].indexOf(this.props.data[i].artist)\n            if (song_index === -1) {\n                song_data[0].push(this.props.data[i].song);\n                song_data[1].push(1);\n            }\n            else {\n                song_data[1][song_index] += 1\n            }\n            if (artist_index === -1) {\n                artist_data[0].push(this.props.data[i].artist)\n                artist_data[1].push(1)\n            }\n            else {\n                artist_data[1][artist_index] += 1\n            }\n\n        }\n        console.log(song_data,artist_data)\n        return (\n            <div className='row'>\n                <div className='col'><DataTableComp key={0} title={'Song Data'} val={'song'} data={song_data}/></div>\n                <div className='col'><DataTableComp key={1} title={'Artist Data'} val={'artist'} data={artist_data}/></div>\n            </div>\n        )\n    }\n}\n\nexport default ViewTables; ","import React, { Component } from 'react';\nimport ButtonClass from './buttons';\nimport ViewTables from './viewTables';\n\nclass Body extends Component {\n\n    constructor(props){\n        super(props)\n        this.state={'display':-1,'range':['All Time']};\n    }\n    componentDidMount()\n    {\n        this.setData();\n    }\n    setData = () =>{\n        let obj = {\n            'allTime': []\n        }\n        var rangeArr = ['All Time']\n        for (let i = 0; i < this.props.data.length; i++) {\n            if (this.props.data[i].title.substring(0, 11).toLowerCase() == \"listened to\") {\n                if (obj[this.props.data[i].time.split('-')[0]] == undefined) {\n                    obj[this.props.data[i].time.split('-')[0]] = [];\n                    obj[this.props.data[i].time.split('-')[0]].push({'song':this.props.data[i].title.substring(12),'artist':this.props.data[i].description})\n                    rangeArr.push(this.props.data[i].time.split('-')[0])\n                }\n                else {\n                    obj[this.props.data[i].time.split('-')[0]].push({'song':this.props.data[i].title.substring(12),'artist':this.props.data[i].description})\n                }\n                obj.allTime.push({'song':this.props.data[i].title.substring(12),'artist':this.props.data[i].description})\n            }\n        }\n        this.setState({'data': obj, 'range': rangeArr, 'display': -1 })\n\n    }\n\n    changeDisplay = (index) => {\n        let obj = { ...this.state }\n        obj['display'] = index;\n        this.setState(obj);\n    }\n\n\n\n    render() {\n        if (this.state.display == -1) {\n            return (\n                <div id=\"buttonRow\" className=\"row\">\n                    {this.state.range.map((rangeVal, index) => (<ButtonClass dispFun={this.changeDisplay} buttonName={rangeVal} key={index} val={index} />))}\n                    </div>\n            )\n        }\n        else {\n            let val = this.state.range[this.state.display], dataToPass;\n            if(val==\"All Time\"){dataToPass = this.state.data['allTime'];}else{dataToPass = this.state.data[val];}\n            console.log(dataToPass)\n            return (\n                <React.Fragment>\n                <div id=\"buttonRow\" className=\"row\">\n                    {this.state.range.map((rangeVal, index) => (<ButtonClass dispFun={this.changeDisplay} buttonName={rangeVal} key={index} val={index} />))}\n                </div>\n                <ViewTables data={dataToPass}/>\n                </React.Fragment>\n            )\n        }\n\n    }\n}\n\nexport default Body","import React from 'react';\nimport './App.css';\nimport FileInput from './components/input'\nimport Body from './components/body'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = { songs: \"\" }\n  }\n\n  setSongsData = (data) => {\n    this.setState({'songs':data})\n  }\n\n  render() {\n\n    if (this.state.songs === \"\") {\n      return (\n          <FileInput setSongsData={this.setSongsData}/>\n      );\n    }\n    else{\n      return(\n        <Body data={this.state.songs}/>\n      )\n    }\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css' \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}